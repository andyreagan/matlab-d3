function d3main(f,width,height,plotted)

fprintf(f,'function loaded(figure) {\n');
fprintf(f,'\n');
fprintf(f,'var margin = {top: 20, right: 20, bottom: 50, left: 50},\n');
fprintf(f,'    width = %g - margin.left - margin.right,\n',width);
fprintf(f,'    height = %g - margin.top - margin.bottom,\n',height);
fprintf(f,'    figwidth = .775*width,\n');
fprintf(f,'    figheight = .775*height;\n');
fprintf(f,'\n');
fprintf(f,'var canvas = figure.append("svg:svg")\n');
fprintf(f,'    .attr("width", width + margin.left + margin.right)\n');
fprintf(f,'    .attr("height", height + margin.top + margin.bottom)\n');
fprintf(f,'    .attr("class","canvas")\n');
fprintf(f,'    .append("g");\n');
fprintf(f,'    //.attr("transform", "translate(" + margin.left + "," + margin.top + ")");\n');
fprintf(f,'\n');
fprintf(f,'// create the x and y axis\n');
fprintf(f,'var x = d3.scale.linear()\n');
fprintf(f,'    .domain([0, 2])\n');
fprintf(f,'    .range([0, width]);\n');
fprintf(f,'var y = d3.scale.linear()\n');
fprintf(f,'    .domain([-4, 12])\n');
fprintf(f,'    .range([height, 0]);\n');
fprintf(f,'\n');
fprintf(f,'// zoom object for the axes\n');
fprintf(f,'var zoom = d3.behavior.zoom()\n');
fprintf(f,'    .x(x)\n');
fprintf(f,'    .y(y)\n');
fprintf(f,'    .on("zoom",zoomed);\n');
fprintf(f,'\n');
fprintf(f,'// create the axes themselves\n');
fprintf(f,'var axes = canvas.append("g")\n');
fprintf(f,'    .attr("transform", "translate(" + (0.125 * figwidth) + "," +\n');
fprintf(f,'       ((1 - 0.125 - 0.775) * figheight) + ")")\n');
fprintf(f,'    .attr("width", width)\n');
fprintf(f,'    .attr("height", height)\n');
fprintf(f,'    .attr("class", "main")\n');
fprintf(f,'    .call(zoom);\n');
fprintf(f,'\n');
fprintf(f,'// create the axes background\n');
fprintf(f,'axes.append("svg:rect")\n');
fprintf(f,'    .attr("width", width)\n');
fprintf(f,'    .attr("height", height)\n');
fprintf(f,'    .attr("class", "bg")\n');
fprintf(f,'    .attr("fill", "#FCFCFC");\n');
fprintf(f,'\n');
fprintf(f,'// axes creation functions\n');
fprintf(f,'var create_xAxis = function() {\n');
fprintf(f,'    return d3.svg.axis()\n');
fprintf(f,'    .scale(x)\n');
fprintf(f,'    .orient("bottom"); }\n');
fprintf(f,'var create_yAxis = function() {\n');
fprintf(f,'    return d3.svg.axis()\n');
fprintf(f,'    .scale(y)\n');
fprintf(f,'    .orient("left"); }\n');
fprintf(f,'\n');
fprintf(f,'// draw the axes\n');
fprintf(f,'var yAxis = create_yAxis();\n');
fprintf(f,'\n');
fprintf(f,'axes.append("g")\n');
fprintf(f,'  .attr("class", "y axis")\n');
fprintf(f,'  .attr("transform", "(0,0)")\n');
fprintf(f,'  .call(yAxis);\n');
fprintf(f,'\n');
fprintf(f,'var xAxis = create_xAxis();\n');
fprintf(f,'\n');
fprintf(f,'axes.append("g")\n');
fprintf(f,'  .attr("class", "x axis")\n');
fprintf(f,'  .attr("transform", "translate(0," + height + ")")\n');
fprintf(f,'  .call(xAxis);\n');
fprintf(f,'\n');
fprintf(f,'// create the clip boundary\n');
fprintf(f,'\n');
fprintf(f,'// now something else\n');
fprintf(f,'var unclipped_axes = axes;\n');
fprintf(f,' \n');
fprintf(f,'var line01 = d3.svg.line()\n');
fprintf(f,'  .x(function(d) { return x(d.x); })\n');
fprintf(f,'  .y(function(d) { return y(d.y); })\n');
fprintf(f,'  .interpolate("linear");\n');
fprintf(f,'\n');
fprintf(f,'canvas.append("path")\n');
fprintf(f,'   .datum(data01)\n');
fprintf(f,'   .attr("class", "line01")\n');
fprintf(f,'   .attr("d", line01)\n');
fprintf(f,'   .attr("stroke","blue")\n');
fprintf(f,'   .attr("stroke-width",3)\n');
fprintf(f,'   .attr("fill","none");\n');
fprintf(f,'\n');
fprintf(f,'var line02 = d3.svg.symbol();\n');
fprintf(f,'\n');
fprintf(f,'canvas.selectAll(".line02")\n');
fprintf(f,'   .data(data02)\n');
fprintf(f,'   .enter().append("path")\n');
fprintf(f,'   .attr("class", "line02")\n');
fprintf(f,'   .attr("transform", function(d) { return "translate(" + x(d.x) + "," + y(d.y) + ")"; })\n');
fprintf(f,'   .attr("d", line02);\n');
fprintf(f,'\n');
fprintf(f,'    function zoomed() {\n');
fprintf(f,'        d3.select(".x.axis").call(xAxis);\n');
fprintf(f,'        d3.select(".y.axis").call(yAxis);\n');
fprintf(f,'\n');
fprintf(f,'        canvas.select(".line01")\n');
fprintf(f,'          .attr("d",line01(data01));\n');
fprintf(f,'\n');
fprintf(f,'        canvas.selectAll(".line02")\n');
fprintf(f,'          .attr("transform", function(d) { return "translate(" + x(d.x) + "," + y(d.y) + ")"; })\n');
fprintf(f,'     };\n');
fprintf(f,'};\n');
fprintf(f,'</script>\n');